---
import client from "@data/client.json"
---

<!-- ============================================ --><!--                 Navigation                   --><!-- ============================================ -->
<header id="cs-navigation" class="">
  <div class="cs-container">
    <!--Nav Logo-->
    <!--Logo is turned white in the css with a filter on dark mode-->
    <a href="/" class="cs-logo" aria-label="back to home">
      <img
        src="/assets/svgs/logo.svg"
        alt="logo"
        width="210"
        height="29"
        aria-hidden="true"
        decoding="async"
      />
    </a>
    <!--Navigation List-->
    <nav class="cs-nav" role="navigation">
      <!--Mobile Nav Toggle-->
      <button class="cs-toggle" aria-label="mobile menu toggle">
        <div class="cs-box" aria-hidden="true">
          <span class="cs-line cs-line1" aria-hidden="true"></span>
          <span class="cs-line cs-line2" aria-hidden="true"></span>
          <span class="cs-line cs-line3" aria-hidden="true"></span>
        </div>
      </button>
      <!-- We need a wrapper div so we can set a fixed height on the cs-ul in case the nav list gets too long from too many dropdowns being opened and needs to have an overflow scroll. This wrapper acts as the background so it can go the full height of the screen and not cut off any overflowing nav items while the cs-ul stops short of the bottom of the screen, which keeps all nav items in view no matter how mnay there are-->
      <div class="cs-ul-wrapper">
        <ul id="cs-expanded" class="cs-ul" aria-expanded="false">
          <li class="cs-li">
            <a href="" class="cs-li-link cs-active"> Anasayfa</a>
          </li>
          <li class="cs-li">
            <a href="" class="cs-li-link">Hakkımızda</a>
          </li>
          <!--Copy and paste this cs-dropdown list item and replace any .cs-li with this cs-dropdown group to make a new dropdown and it will work-->
          <li class="cs-li cs-dropdown" tabindex="0">
            <span class="cs-li-link">
              Hizmetlerimiz
              <img
                class="cs-drop-icon"
                src="/assets/svgs/dropdown.svg"
                alt="dropdown icon"
                width="15"
                height="15"
                decoding="async"
                aria-hidden="true"
              />
            </span>
            <ul class="cs-drop-ul">
              <li class="cs-drop-li">
                <a href="" class="cs-li-link cs-drop-link">Bireysel Terapi</a>
              </li>
              <li class="cs-drop-li">
                <a href="" class="cs-li-link cs-drop-link"
                  >Çift ve Aile Terapisi</a
                >
              </li>
              <li class="cs-drop-li">
                <a href="" class="cs-li-link cs-drop-link">Çocuk Terapisi</a>
              </li>
              <li class="cs-drop-li">
                <a href="" class="cs-li-link cs-drop-link"
                  >Bağımlılık Terapisi</a
                >
              </li>
            </ul>
          </li>
          <li class="cs-li">
            <a href="/blog/" class="cs-li-link"> Blog </a>
          </li>
          <li class="cs-li">
            <a href="" class="cs-li-link"> İletişim </a>
          </li>
        </ul>
      </div>
    </nav>
    <div class="cs-contact-group">
      <a href={`tel:${client.phoneForTel}`} class="cs-phone">
        <img
          class="cs-phone-icon"
          src="/assets/svgs/phone.svg"
          alt="logo"
          width="24"
          height="24"
          aria-hidden="true"
          decoding="async"
        />
        {client.phoneFormatted}
      </a>
      <a href="/" class="cs-button-solid">Ücretsiz İlk Seans &gt;</a>
    </div>
  </div>

  <script>
    // NAV
    document.addEventListener("astro:page-load", () => {
      // Make the script controlling the <Hamburger /> mobile menu component available after navigating to a new page.

      // add classes for mobile navigation toggling
      var CSbody = document.querySelector("body")
      const CSnavbarMenu = document.querySelector("#cs-navigation")
      const CShamburgerMenu = document.querySelector(
        "#cs-navigation .cs-toggle"
      )

      CShamburgerMenu.addEventListener("click", function () {
        CShamburgerMenu.classList.toggle("cs-active")
        CSnavbarMenu.classList.toggle("cs-active")
        CSbody.classList.toggle("cs-open")
        // run the function to check the aria-expanded value
        ariaExpanded()
      })

      // checks the value of aria expanded on the cs-ul and changes it accordingly whether it is expanded or not
      function ariaExpanded() {
        const csUL = document.querySelector("#cs-expanded")
        const csExpanded = csUL.getAttribute("aria-expanded")

        if (csExpanded === "false") {
          csUL.setAttribute("aria-expanded", "true")
        } else {
          csUL.setAttribute("aria-expanded", "false")
        }
      }

      // mobile nav toggle code
      const dropDowns = Array.from(
        document.querySelectorAll("#cs-navigation .cs-dropdown")
      )
      for (const item of dropDowns) {
        const onClick = () => {
          item.classList.toggle("cs-active")
        }
        item.addEventListener("click", onClick)
      }

      // This script adds a class to the body after scrolling 100px
      // and we used these body.scroll styles to create some on scroll
      // animations with the navbar
    })

    document.addEventListener("scroll", (e) => {
      const scroll = document.documentElement.scrollTop
      if (scroll >= 100) {
        document.querySelector("body").classList.add("scroll")
      } else {
        document.querySelector("body").classList.remove("scroll")
      }
    })
  </script>
</header>
