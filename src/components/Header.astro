---
import navData from "@data/navData.json"
---

<!-- ============================================ --><!--                 Navigation                   --><!-- ============================================ -->
<header id="cs-navigation" class="">
  <div class="cs-container">
    <!--Nav Logo-->
    <!--Logo is turned white in the css with a filter on dark mode-->
    <a href="/" class="cs-logo" aria-label="back to home">
      <img
        src="/assets/svgs/logo.svg"
        alt="logo"
        width="210"
        height="29"
        aria-hidden="true"
        decoding="async"
      />
    </a>
    <!--Navigation List-->
    <nav class="cs-nav" role="navigation">
      <!--Mobile Nav Toggle-->
      <button class="cs-toggle" aria-label="mobile menu toggle">
        <div class="cs-box" aria-hidden="true">
          <span class="cs-line cs-line1" aria-hidden="true"></span>
          <span class="cs-line cs-line2" aria-hidden="true"></span>
          <span class="cs-line cs-line3" aria-hidden="true"></span>
        </div>
      </button>
      <!-- We need a wrapper div so we can set a fixed height on the cs-ul in case the nav list gets too long from too many dropdowns being opened and needs to have an overflow scroll. This wrapper acts as the background so it can go the full height of the screen and not cut off any overflowing nav items while the cs-ul stops short of the bottom of the screen, which keeps all nav items in view no matter how mnay there are-->
      <div class="cs-ul-wrapper">
        <ul id="cs-expanded" class="cs-ul" aria-expanded="false">
          <li class="cs-li">
            <a href="" class="cs-li-link cs-active"> Anasayfa</a>
          </li>
          <li class="cs-li">
            <a href="" class="cs-li-link">Hakkımızda</a>
          </li>
          <!--Copy and paste this cs-dropdown list item and replace any .cs-li with this cs-dropdown group to make a new dropdown and it will work-->
          <li class="cs-li cs-dropdown" tabindex="0">
            <span class="cs-li-link">
              Servislerimiz
              <img
                class="cs-drop-icon"
                src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Icons/down-gold.svg"
                alt="dropdown icon"
                width="15"
                height="15"
                decoding="async"
                aria-hidden="true"
              />
            </span>
            <ul class="cs-drop-ul">
              <li class="cs-drop-li">
                <a href="" class="cs-li-link cs-drop-link">Bireysel Terapi</a>
              </li>
              <li class="cs-drop-li">
                <a href="" class="cs-li-link cs-drop-link"
                  >Çift ve Aile Terapisi</a
                >
              </li>
              <li class="cs-drop-li">
                <a href="" class="cs-li-link cs-drop-link">Çocuk Terapisi</a>
              </li>
              <li class="cs-drop-li">
                <a href="" class="cs-li-link cs-drop-link"
                  >Bağımlılık Terapisi</a
                >
              </li>
            </ul>
          </li>
          <li class="cs-li">
            <a href="/blog/" class="cs-li-link"> Blog </a>
          </li>
          <li class="cs-li">
            <a href="" class="cs-li-link"> İletişim </a>
          </li>
        </ul>
      </div>
    </nav>
    <div class="cs-contact-group">
      <a href="" class="cs-phone">
        <img
          class="cs-phone-icon"
          src="/assets/svgs/phone.svg"
          alt="logo"
          width="24"
          height="24"
          aria-hidden="true"
          decoding="async"
        />
        0 512 345 6789
      </a>
      <div class="cs-social">
        <a href="" class="cs-social-link">
          <img
            class="cs-social-icon"
            src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Images/Icons/facebook-1a.svg"
            alt="logo"
            width="12"
            height="12"
            aria-hidden="true"
            decoding="async"
          />
        </a>
        <a href="" class="cs-social-link">
          <img
            class="cs-social-icon"
            src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Images/Icons/twitter-1a.svg"
            alt="logo"
            width="12"
            height="12"
            aria-hidden="true"
            decoding="async"
          />
        </a>
        <a href="" class="cs-social-link">
          <img
            class="cs-social-icon"
            src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Images/Icons/instagram1a.svg"
            alt="logo"
            width="12"
            height="12"
            aria-hidden="true"
            decoding="async"
          />
        </a>
        <a href="" class="cs-social-link">
          <img
            class="cs-social-icon"
            src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Images/Icons/youtube1a.svg"
            alt="logo"
            width="12"
            height="12"
            aria-hidden="true"
            decoding="async"
          />
        </a>
      </div>
    </div>
    <!--Dark Mode toggle, uncomment button code if you want to enable a dark mode toggle-->
    <!-- <button id="dark-mode-toggle" aria-label="dark mode toggle">
            <svg class="cs-moon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 480 480" style="enable-background:new 0 0 480 480" xml:space="preserve"><path d="M459.782 347.328c-4.288-5.28-11.488-7.232-17.824-4.96-17.76 6.368-37.024 9.632-57.312 9.632-97.056 0-176-78.976-176-176 0-58.4 28.832-112.768 77.12-145.472 5.472-3.712 8.096-10.4 6.624-16.832S285.638 2.4 279.078 1.44C271.59.352 264.134 0 256.646 0c-132.352 0-240 107.648-240 240s107.648 240 240 240c84 0 160.416-42.688 204.352-114.176 3.552-5.792 3.04-13.184-1.216-18.496z"/></svg>
            <img class="cs-sun" aria-hidden="true" src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Icons%2Fsun.svg" decoding="async" alt="moon" width="15" height="15">
        </button> -->
  </div>
</header>

<script>
  // NAV
  document.addEventListener("astro:page-load", () => {
    // Make the script controlling the <Hamburger /> mobile menu component available after navigating to a new page.

    // add classes for mobile navigation toggling
    var CSbody = document.querySelector("body")
    const CSnavbarMenu = document.querySelector("#cs-navigation")
    const CShamburgerMenu = document.querySelector("#cs-navigation .cs-toggle")

    CShamburgerMenu.addEventListener("click", function () {
      CShamburgerMenu.classList.toggle("cs-active")
      CSnavbarMenu.classList.toggle("cs-active")
      CSbody.classList.toggle("cs-open")
      // run the function to check the aria-expanded value
      ariaExpanded()
    })

    // checks the value of aria expanded on the cs-ul and changes it accordingly whether it is expanded or not
    function ariaExpanded() {
      const csUL = document.querySelector("#cs-expanded")
      const csExpanded = csUL.getAttribute("aria-expanded")

      if (csExpanded === "false") {
        csUL.setAttribute("aria-expanded", "true")
      } else {
        csUL.setAttribute("aria-expanded", "false")
      }
    }

    // mobile nav toggle code
    const dropDowns = Array.from(
      document.querySelectorAll("#cs-navigation .cs-dropdown")
    )
    for (const item of dropDowns) {
      const onClick = () => {
        item.classList.toggle("cs-active")
      }
      item.addEventListener("click", onClick)
    }

    // This script adds a class to the body after scrolling 100px
    // and we used these body.scroll styles to create some on scroll
    // animations with the navbar
  })

  // DARK MODE //

  document.addEventListener("astro:page-load", () => {
    // helper functions to toggle dark mode
    function enableDarkMode() {
      document.body.classList.add("dark-mode")
      localStorage.setItem("theme", "dark")
    }
    function disableDarkMode() {
      document.body.classList.remove("dark-mode")
      localStorage.setItem("theme", "light")
    }

    // determines a new users dark mode preferences
    function detectColorScheme() {
      // default to the light theme
      let theme = "light"

      // check localStorage for a saved 'theme' variable. if it's there, the user has visited before, so apply the necessary theme choices
      if (localStorage.getItem("theme")) {
        theme = localStorage.getItem("theme")
      }
      // if it's not there, check to see if the user has applied dark mode preferences themselves in the browser
      else if (
        window.matchMedia &&
        window.matchMedia("(prefers-color-scheme: dark)").matches
      ) {
        theme = "dark"
      }

      // if there is no preference set, the default of light will be used. apply accordingly
      theme === "dark" ? enableDarkMode() : disableDarkMode()
    }

    // run on page load
    detectColorScheme()

    // add event listener to the dark mode button toggle
    document
      .getElementById("dark-mode-toggle")
      .addEventListener("click", () => {
        // on click, check localStorage for the dark mode value, use to apply the opposite of what's saved
        localStorage.getItem("theme") === "light"
          ? enableDarkMode()
          : disableDarkMode()
      })
  })

  document.addEventListener("scroll", (e) => {
    const scroll = document.documentElement.scrollTop
    if (scroll >= 100) {
      document.querySelector("body").classList.add("scroll")
    } else {
      document.querySelector("body").classList.remove("scroll")
    }
  })
</script>
